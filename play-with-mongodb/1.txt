

### insert document into mongodb collection 

```javascript
db.users.insertOne({name: "John", age: 25, status: "A"})
db.users.insertOne({name: "Jane", age: 30, status: "A"})
```

### insert many documents into mongodb collection

```javascript
db.users.insertMany([
  {name: "John", age: 25, status: "A"},
  {name: "Jane", age: 30, status: "A"}
])
```

### find document in mongodb collection

```javascript
db.users.find()
```

### insert document with custom id

```javascript
db.users.insertOne({_id: 1, name: "Nag", age: 25, status: "A"})
```

### find document by name

```javascript
db.users.find({_id: 1})
db.users.find({name: "Nag"})
db.users.find({name: "Nag", age: 41})
db.users.find({name: "nag"})
```

###insert document with all data types

```javascript
db.users.insertOne({
  _id: 2,
  name: "Nag",
  age: 41,
  status: "A",
  address: {
    city: "chennai",
    state: "TN"
  },
  skills: ["js", "rb", "py"],
  dob: new Date()
})
```


### find document by name

```javascript
db.users.find({name: "Nag"})
```

### find document by skill

```javascript
db.users.find({skills: "js"})
```

### find document by address.city

```javascript
db.users.find({"address.city": "chennai"})
```



### insert user with age as string

```javascript
db.users.insertOne({name: "Nag", age: "fourty one", status: "A"})
db.users.find()
```

### delete document where age is fourty one

```javascript
db.users.deleteOne({age: "fourty one"})
```

### delete all documents where status is A

```javascript
db.users.deleteMany({status: "A"})
```

### delete all documents

```javascript
db.users.deleteMany({})
```


types of mongodb operators
--------------------------

1. update operators
2. query operators
3. projection operators
4. aggregation operators

### update operators

1. $set - to update existing field or add new field

```javascript
db.users.insertOne({name: "Nag", age: 40, status: "A"})
db.users.find()
db.users.updateOne({name: "Nag"}, {$set: {age: 41}})
db.users.updateOne({name: "Nag"}, {$set: {language: "en"}})
```

### updateMany

```javascript
db.users.updateMany({status: "A"}, {$set: {status: "active"}})
```


### upsert

```javascript
db.likes.updateOne({name:"python"},{"$inc":{likes:1}}, {upsert:true})
db.likes.updateOne({name:"mongodb"},{"$inc":{likes:1}}, {upsert:true})
db.likes.find()
```



2. $unset - to remove field

```javascript
db.users.updateOne({name: "Nag"}, {$unset: {language: 1}})
db.users.find()
```

3. $inc - to increment number field

```javascript
db.users.updateOne({name: "Nag"}, {$inc: {age: 1}})
db.users.find()
```

4. $rename - to rename field

```javascript
db.users.updateOne({name: "Nag"}, {$rename: {age: "oldAge"}})
db.users.find()
```

db.users.deleteMany({})


### insert many documents with array of skills

```javascript
db.users.insertMany([
  {name: "Nag", age: 41, status: "A", skills: ["js", "rb", "py"]},
  {name: "Riya", age: 1, status: "A", skills: ["py","js" ]},
  {name: "Diya", age: 25, status: "A", skills: ["js", "rb","py" ]}
])
```

### update skill 'py' to 'python' in all documents

```javascript
db.users.updateMany({skills: "py"}, {$set: {"skills.$": "python"}})
db.users.find()
```


###  update embedded document

```javascript
db.users.updateOne({name: "Nag"}, {$set: {"address.city": "chennai"}})
db.users.find()
```

### $min - to update field with min value

```javascript
db.users.updateOne({name: "Nag"}, {$min: {age: 50}})
db.users.find()
```